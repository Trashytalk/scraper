[tool:pytest]
# Pytest Configuration for Business Intelligence Scraper
# Comprehensive testing configuration for all test categories

# Test discovery and collection
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version requirement
minversion = 6.0

# Required plugins
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --showlocals
    --durations=10
    --cov=business_intel_scraper
    --cov=.
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=term-missing
    --cov-fail-under=80
    --junitxml=test-results.xml

# Test markers for categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interaction
    performance: Performance and load testing
    security: Security and vulnerability testing
    api: API endpoint testing
    database: Database operation testing
    slow: Tests that take more than 1 second
    fast: Tests that complete quickly
    smoke: Basic functionality smoke tests
    regression: Regression testing for bug fixes
    end_to_end: Complete workflow testing
    mock: Tests that use mocking
    real_data: Tests that use real external data
    network: Tests requiring network access
    auth: Authentication and authorization tests
    encryption: Data encryption and protection tests
    validation: Input validation and sanitization tests
    analytics: Analytics and reporting tests
    monitoring: System monitoring tests
    alerts: Alert system tests
    websocket: WebSocket functionality tests
    concurrent: Concurrency and thread safety tests
    memory: Memory usage and leak tests
    disk: Disk I/O and storage tests
    cache: Caching mechanism tests
    backup: Backup and recovery tests
    migration: Database migration tests
    deployment: Deployment and configuration tests

# Test timeout (in seconds)
timeout = 300

# Ignore warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:urllib3.*
    ignore::UserWarning:requests.*

# Test collection
collect_ignore = 
    setup.py
    archive/*
    temp/*
    .git/*

# Parallel execution (if pytest-xdist is installed)
# addopts = --numprocesses=auto

# Log configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test environment variables
env = 
    TESTING = 1
    DATABASE_URL = sqlite:///:memory:
    SECRET_KEY = test-secret-key-not-for-production
    ENVIRONMENT = testing
    LOG_LEVEL = DEBUG
    DISABLE_AUTH = 1
    MOCK_EXTERNAL_APIS = 1

# Test data directory
testmon_datafile = .testmondata

# Coverage configuration
[coverage:run]
source = .
omit = 
    */tests/*
    */test_*
    setup.py
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*
    */scripts/*
    */.git/*
    */htmlcov/*
    */node_modules/*

branch = True
parallel = True

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
title = Business Intelligence Scraper Test Coverage

[coverage:xml]
output = coverage.xml
