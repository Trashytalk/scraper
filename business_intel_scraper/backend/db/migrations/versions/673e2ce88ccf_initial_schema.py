"""initial schema

Revision ID: 673e2ce88ccf
Revises:
Create Date: 2025-07-17 01:07:54.193550

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "673e2ce88ccf"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "companies",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_companies_name"), "companies", ["name"], unique=False)
    op.create_table(
        "locations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column("latitude", sa.Float(), nullable=False),
        sa.Column("longitude", sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_locations_address"), "locations", ["address"], unique=False
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    op.create_table(
        "scrape_tasks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("company_id", sa.Integer(), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_scrape_tasks_company_id"), "scrape_tasks", ["company_id"], unique=False
    )
    op.create_index(
        op.f("ix_scrape_tasks_status"), "scrape_tasks", ["status"], unique=False
    )
    op.create_index(
        op.f("ix_scrape_tasks_user_id"), "scrape_tasks", ["user_id"], unique=False
    )
    op.create_table(
        "osint_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column("data", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["scrape_tasks.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_osint_results_task_id"), "osint_results", ["task_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_osint_results_task_id"), table_name="osint_results")
    op.drop_table("osint_results")
    op.drop_index(op.f("ix_scrape_tasks_user_id"), table_name="scrape_tasks")
    op.drop_index(op.f("ix_scrape_tasks_status"), table_name="scrape_tasks")
    op.drop_index(op.f("ix_scrape_tasks_company_id"), table_name="scrape_tasks")
    op.drop_table("scrape_tasks")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_locations_address"), table_name="locations")
    op.drop_table("locations")
    op.drop_index(op.f("ix_companies_name"), table_name="companies")
    op.drop_table("companies")
    # ### end Alembic commands ###
