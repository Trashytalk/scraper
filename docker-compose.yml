version: '3.8'

services:
  api:
    build: .
    command: uvicorn business_intel_scraper.backend.api.main:app --host 0.0.0.0 --port 8000
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/postgres
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - backend

  worker:
    build: .
    command: celery -A business_intel_scraper.backend.workers.tasks.celery_app worker --loglevel=info
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/postgres
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - api
      - db
      - redis
    networks:
      - backend

  beat:
    build: .
    command: celery -A business_intel_scraper.backend.workers.tasks.celery_app beat --loglevel=info -s /tmp/celerybeat-schedule
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/postgres
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    networks:
      - backend

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend

  redis:
    image: redis:7
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - backend

volumes:
  postgres_data:
  redis_data:

networks:
  backend:
    driver: bridge
