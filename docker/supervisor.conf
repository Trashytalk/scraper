[supervisord]
nodaemon=true
user=root
logfile=/app/logs/supervisord.log
pidfile=/app/logs/supervisord.pid
childlogdir=/app/logs/

[unix_http_server]
file=/tmp/supervisor.sock
chmod=0700

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

# Redis Server
[program:redis]
command=redis-server /etc/redis/redis.conf
autostart=true
autorestart=true
stderr_logfile=/app/logs/redis.err.log
stdout_logfile=/app/logs/redis.out.log
user=redis

# Backend API Server
[program:backend]
command=python3 backend_server.py
directory=/app
autostart=true
autorestart=true
stderr_logfile=/app/logs/backend.err.log
stdout_logfile=/app/logs/backend.out.log
user=appuser
environment=PYTHONPATH="/app",ENVIRONMENT="production"

# Performance Monitor
[program:monitor]
command=python3 performance_monitor.py
directory=/app
autostart=true
autorestart=true
stderr_logfile=/app/logs/monitor.err.log
stdout_logfile=/app/logs/monitor.out.log
user=appuser
environment=PYTHONPATH="/app"

# Nginx (HTTP Proxy)
[program:nginx]
command=nginx -g "daemon off;"
autostart=true
autorestart=true
stderr_logfile=/app/logs/nginx.err.log
stdout_logfile=/app/logs/nginx.out.log
user=root

# Log rotation (daily)
[program:logrotate]
command=/bin/bash -c 'while true; do sleep 86400; find /app/logs -name "*.log" -size +100M -exec truncate -s 50M {} \; ; done'
autostart=true
autorestart=true
stderr_logfile=/app/logs/logrotate.err.log
stdout_logfile=/app/logs/logrotate.out.log
user=appuser
